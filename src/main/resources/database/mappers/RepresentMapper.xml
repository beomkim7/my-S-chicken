<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.groups.schicken.board.represent.RepresentDAO">
	<sql id="search">	
			<choose>
				<when test='pager.kind != null and pager.kind.equals("kind1")'>AND r.title LIKE CONCAT('%',#{pager.search},'%')</when>
				<when test='pager.kind != null and pager.kind.equals("kind2")'>AND r.writer_id LIKE CONCAT('%',#{pager.search},'%')</when>
				<otherwise>AND (r.title LIKE CONCAT('%',#{search},'%') OR r.writer_id LIKE CONCAT('%',#{pager.search},'%')) </otherwise>					
			</choose>
	</sql>
	
	<sql id="sort"> 
		<choose>
			<when test="boardVO.sort == 0 and boardVO.sort != null">AND r.sort = 0</when>
			<when test="boardVO.sort == 1 and boardVO.sort != null">AND r.sort = 1</when>
		</choose>
	</sql>
	
	<sql id="countImp">
		(select count(*) as subCount,id from represent where important = 1)
		sub
	</sql>
	
	
	<update id="impRank">
		UPDATE represent
		set rank =#{rank},important=#{important}
		WHERE id=#{id}
	</update>
	
	<select id="impList">
		SELECT *
			FROM represent r
			left join <include refid="countImp"/> on sub.id=r.id
			WHERE r.is_deleted !=1 AND r.important = 1
			ORDER BY ifnull(rank,0)
	</select>

	<select id="getTotalCount" parameterType="Map" resultType="Long">
		SELECT COUNT(id) FROM represent r
		WHERE is_deleted !=1 <include refid="sort"/>
		<include refid="search"/>
	</select>	
	
	<select id="getList" parameterType="Map" resultMap="getDetailResult">
		SELECT r.*,
			emp.name
			 FROM represent r
			LEFT JOIN employee emp ON emp.id =r.writer_id
			WHERE r.is_deleted !=1 <include refid="sort"/>
			<include refid="search"/>
			ORDER BY IFNULL(rank,10), id DESC
			LIMIT #{pager.startIndex},#{pager.perPage}
	</select>
	
	
	<select id="getDetail" parameterType="BoardVO" resultMap="getDetailResult">
		SELECT 
		r.*,
		a.id attach_id,
		a.origin_name attach_origin_name,
		a.url attach_url,
		a.extension attach_extension,
		a.parent_id attach_parent_id,
		a.tbl_id attach_tbl_id,
		a.name attach_name
		FROM represent r
		LEFT JOIN attach a ON r.id = a.parent_id
		WHERE r.id=#{id}
	</select>
		
	<resultMap type="BoardVO" id="getDetailResult">
    	<id column="id" property="id"/>
    	<result  column="write_date" property="writeDate"/>
    	<result  column="content" property="content"/>
    	<result  column="is_deleted" property="isDeleted"/>
    	<result  column="writer_id" property="writerId"/>
    	<result  column="hit" property="hit"/>
    	<result  column="sort" property="sort"/>
    	<result  column="title" property="title"/>
    	<result  column="important" property="important"/>
    	<association property="employeeVO" javaType="EmployeeVO" autoMapping="true"/>	
		<collection property="fileVO" javaType="List" ofType="FileVO" autoMapping="true" columnPrefix="attach_">
				<id column="id" property="id"/>
		</collection>		
	</resultMap>

<!-- FileVO를 매핑하는 resultMap -->
	
	<insert id="add" parameterType="BoardVO" keyProperty="id">
		<selectKey order="BEFORE" resultType="Long" keyProperty="id">
			SELECT nextval(seq1)
		</selectKey>
		INSERT INTO represent
		VALUES
		(#{id},#{writeDate},#{content},0,#{writerId},0,#{sort},#{title},#{important},null,null,null)
	</insert>
	
	<insert id="fileAdd" parameterType="FileVO" keyProperty="id">
		<selectKey resultType="Long" order="BEFORE" keyProperty="id">
			SELECT nextval(seq2)
		</selectKey>
		INSERT INTO attach
		VALUES(#{id},#{name},#{originName},#{url},#{extension},#{parentId},#{tblId})
	</insert>
	
	<select id="pastPage" resultType="BoardVO" parameterType="BoardVO"> <!-- &lt; 이전게시판보기 -->
			SELECT id, title, sort
			FROM represent
			WHERE id  &lt; #{id}
			AND sort = #{sort}
			AND is_deleted !=1
			ORDER BY id DESC
			LIMIT 1
	</select>
	
	<update id="hit" parameterType="BoardVO">
		UPDATE represent SET
		hit=hit+1
		WHERE id=#{id}
	</update>
	
	<select id="nextPage" resultType="BoardVO" parameterType="BoardVO"> <!-- &gt; 다음게시판보기  -->
		SELECT id, title,sort
			FROM represent
			WHERE id &gt; #{id}	
			AND sort = #{sort}
			AND is_deleted !=1
			ORDER BY id
			LIMIT 1
	</select>
	
	<update id="update" parameterType="BoardVO">
		UPDATE represent
		<set>
			<if test="title !=null and title !=''">
				title=#{title},
			</if>
			<if test="content != null and content !=''">
				content=#{content},
			</if>
			<if test="important !=null and important !=0">
				rank = 0,
			</if>
				important=#{important},modify_date=#{modifyDate},modify_id=#{modifyId}
		</set>
		WHERE id=#{id}
	</update>

	<update id="delete" parameterType="BoardVO">
		UPDATE represent SET
		is_deleted=1,title=#{title},important = 0
		WHERE id=#{id}
	</update>

</mapper>